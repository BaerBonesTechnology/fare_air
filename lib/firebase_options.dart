// File generated by FlutterFire CLI.
// ignore_for_file: type=lint, unused_import
import 'dart:convert';
import 'dart:io';

import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

import 'config/model/platform_config.dart';
import 'constants/environment_constants.dart';

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```

class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      throw UnsupportedError(
        'DefaultFirebaseOptions have not been configured for web - '
        'you can reconfigure this by running the FlutterFire CLI again.',
      );
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static FirebaseOptions android = FirebaseOptions(
    apiKey: config?.apiKey ?? '',
    appId: config?.appId ?? '',
    messagingSenderId: config?.messagingSenderId ?? '',
    projectId: config?.projectId ?? '',
    storageBucket: config?.storageBucket ?? '',
  );

  static FirebaseOptions ios = FirebaseOptions(
    apiKey: config?.apiKey ?? '',
    appId: config?.appId ?? '',
    messagingSenderId: config?.messagingSenderId ?? '',
    projectId: config?.projectId ?? '',
    storageBucket: config?.storageBucket ?? '',
    iosBundleId: (config as IosConfig?)?.iosBundleId ?? '',
  );
}
